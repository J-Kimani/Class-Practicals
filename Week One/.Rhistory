install.packages('IRkernel')
IRkernel::installspec()
IRkernel::installspec()
IRkernel::installspec()
summary(mtcars)
setwd("C:\Users\HomePC\OneDrive\Academics\KINAP\Inferential Data Analysis\Practicals\Week One")
setwd("C:/Users/HomePC/OneDrive/Academics/KINAP/Inferential Data Analysis/Practicals/Week One")
str(df)
df <- read.csv("gapminder.csv")
str(df)
df <- read.csv("gapminder.csv", stringsAsFactors = FALSE)
str(df)   # shows classes
# create a small data.frame with Variable and (suggested) Type
types <- sapply(df, function(x) {
cls <- class(x)[1]
if (cls %in% c("character", "factor")) {
if (is.factor(x) && is.ordered(x)) "Categorical (Ordinal)" else "Categorical (Nominal)"
} else if (cls %in% c("integer", "numeric", "double")) {
# treat whole numbers as discrete counts
if (all(is.na(x) | x == floor(x))) "Numerical (Discrete, Counts)" else "Numerical (Continuous)"
} else {
cls
}
})
types_df <- data.frame(Variable = names(types), Type = unname(types), stringsAsFactors = FALSE)
print(types_df)
str(df)
#structure of dataset
str(df)
# Example 2 â€” Descriptive Summary (Iris: Sepal.Length)
df2 <- read.csv("iris.csv")
x <- df$Sepal.Length
mean(x); median(x)
# mode in base R:
as.numeric(names(sort(table(x),decreasing=TRUE)[1]))
var(x)  # sample variance (n-1)
# all elements
x <- df$SepalLengthCm
mean(x); median(x)
# all elements
x <- df$SepalLengthCm
mean(x); median(x)
# all elements
x <- df2$SepalLengthCm
mean(x); median(x)
# mode in base R:
as.numeric(names(sort(table(x),decreasing=TRUE)[1]))
var(x)  # sample variance (n-1)
sd(x)
quantile(x, probs=c(0.25,0.5,0.75))
range(x)[2]-range(x)[1]
x <- df2$SepalLengthCm[1:10]   # first 10 elements
mean(x); median(x)
# mode in base R:
as.numeric(names(sort(table(x), decreasing = TRUE)[1]))
var(x)  # sample variance (n-1)
sd(x)
quantile(x, probs = c(0.25, 0.5, 0.75))
diff(range(x))  # range max - min
# Exact probability (P(X=1) when n=1, p=0.7)
dbinom(1, size = 1, prob = 0.7)
# Equivalent Bernoulli logic using p directly
p <- 0.7
p  # P(X=1)
# Expectation and variance for Bernoulli(p)
E <- p
Var <- p * (1 - p)
E; Var
# Quick simulation to verify
set.seed(1)
sims <- rbinom(10000, size = 1, prob = p)
mean(sims)   # approx E
var(sims)    # approx Var
# Scenario: 10 students take a test, passing prob p=0.6. Find P(X=7).
dbinom(7,size=10,prob=0.6)
dpois(3, lambda=5)
dpois(3, lambda=5)
1 - pnorm(180, mean=170, sd=10)
